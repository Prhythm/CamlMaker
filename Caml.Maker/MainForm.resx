<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ssStatusBar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/VVVV/1VVVf9VVVX/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/d3d3/0RERP8AAAD/AAAA/1VVVf9VVVX/VVVV/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/qqqq/4iIiP93d3f/RERE/0RERP9ERET/AAAA/wAAAP9VVVX/VVVV/1VVVf8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/VVVV/6qqqv+qqqr/qqqq/4iIiP93d3f/RERE/0RERP9ERET/RERE/wAAAP8AAAD/VVVV/1VV
        Vf9VVVX/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/VVVV/6qqqv+qqqr/ERER/6qqqv+qqqr/RERE/0RERP9ERET/RERE/0RERP9ERET/RERE/0RE
        RP8AAAD/AAAA/1VVVf9VVVX/VVVV/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/VVVV/6qqqv+qqqr/ERER/6qqqv+qqqr/VVVV/1VVVf9ERET/RERE/3d3d/93d3f/RERE/0RE
        RP9ERET/RERE/0RERP9ERET/AAAA/wAAAP9VVVX/VVVV/1VVVf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/qqqq/6qqqv+qqqr/ERER/6qqqv+qqqr/VVVV/1VVVf9ERET/RERE/0RERP9ERET/RERE/0RE
        RP93d3f/d3d3/0RERP9ERET/RERE/0RERP9ERET/RERE/wAAAP8AAAD/VVVV/1VVVf9VVVX/AAAAAAAA
        AAAAAAAAAAAA//////+7u7v/AADd/wAA3f+qqqr/VVVV/1VVVf9ERET/RERE/0RERP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP9ERET/d3d3/3d3d/9ERET/RERE/0RERP9ERET/RERE/0RERP8AAAD/VVVV/1VV
        Vf9VVVX/AAAAAAAAAAAAAAAAAAAA//////+7u7v/VVVV/1VVVf//////RERE/wAAAP8AAAD/AAAA/6qq
        qv+qqqr/qqqq/6qqqv+qqqr/qqqq/wAAAP8AAAD/AAAA/3d3d/93d3f/RERE/0RERP9ERET/RERE/wAA
        AP9VVVX/VVVV/1VVVf8AAAAAAAAAAAAAAAAAAAD/AAAA/wAAAP////////////////8AAAD/////////
        //+qqqr/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/d3d3/3d3d/93d3f/AAAA/0RERP93d3f/d3d3/0RE
        RP9ERET/AAAA/1VVVf9VVVX/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP//////AAAA/3d3
        d/8AAAD/AAAA////////////AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP9ERET/AAAA/0RE
        RP9VVVX/RERE/0RERP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/d3d3/wAAAP8AAAD//////wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/3d3
        d/8AAAD/RERE/1VVVf9ERET/RERE/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAD/AAAA/wAAAP93d3f/AAAA/wAAAP///////////wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/d3d3/wAAAP9ERET/VVVV/0RERP9ERET/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAP8AAAD/AAAA/3d3d///////d3d3//////8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP///////////3d3d/93d3f/AAAA/0RERP9VVVX/RERE/0RERP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP8AAAD///////////8AAAD/d3d3//////93d3f//////3d3d///////////////
        //////////////////+qqqr/d3d3/3d3d/8AAAD/RERE/1VVVf9ERET/RERE/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP///////////wAAAP93d3f//////3d3d///////RERE/0RE
        RP9ERET/RERE/0RERP9ERET//////6qqqv//////d3d3/wAAAP9ERET/VVVV/0RERP9ERET/AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/////////////////wAAAP//////RERE/0RE
        RP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP9ERET/RERE//////8AAAD/RERE/0RERP9VVVX/RERE/0RE
        RP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/////////////////wAA
        AP8AAAD/AAAA/1VVVf9VVVX/VVVV/1VVVf9VVVX/VVVV/wAAAP8AAAD/AAAA/0RERP9ERET/RERE/1VV
        Vf9ERET/RERE/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA////
        ////////AAAA/1VVVf9VVVX/ERER/xEREf8RERH/ERER/xEREf8RERH/VVVV/1VVVf8AAAD/ERER/yIi
        Iv9ERET/VVVV/0RERP9ERET/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAP8RERH/ERER/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/ERER/xER
        Ef8RERH/ERER/yIiIv9VVVX/RERE/0RERP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAD/qqqq/6qqqv+qqqr/qqqq/6qqqv+qqqr/iIiI/4iI
        iP8AAAD/AAAA/wAAAP8RERH/ERER/1VVVf9ERET/RERE/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP+7u7v/qqqq/6qqqv+qqqr/qqqq/6qqqv+qqqr/qqqq/6qq
        qv+IiIj/iIiI/3d3d/93d3f/d3d3/wAAAP8AAAD/VVVV/0RERP9ERET/AAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////3d3d/7u7u/+qqqr/qqqq/6qqqv+qqqr/qqqq/6qq
        qv+qqqr/qqqq/4iIiP+IiIj/d3d3/3d3d/93d3f/VVVV/1VVVf9VVVX/RERE/0RERP8AAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///////d3d3/u7u7/6qqqv+qqqr/VVVV/1VV
        Vf9VVVX/VVVV/1VVVf9VVVX/VVVV/1VVVf93d3f/d3d3/3d3d/9VVVX/VVVV/1VVVf9ERET/RERE/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//////93d3f9VVVX/VVVV/1VV
        Vf+qqqr/qqqq/6qqqv+qqqr/qqqq/6qqqv+qqqr/qqqq/1VVVf9VVVX/VVVV/1VVVf9VVVX/VVVV/0RE
        RP9ERET/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9VVVX/VVVV/7u7
        u/+qqqr/qqqq/6qqqv+qqqr/qqqq/6qqqv+qqqr/qqqq/6qqqv+qqqr/qqqq/6qqqv9VVVX/VVVV/1VV
        Vf9VVVX/RERE/0RERP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////
        ///d3d3/u7u7/6qqqv+qqqr/qqqq/6qqqv+qqqr/qqqq/6qqqv+qqqr/qqqq/6qqqv+qqqr/qqqq/6qq
        qv+qqqr/iIiI/1VVVf9ERET/RERE/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD//////93d3f+qqqr/qqqq/6qqqv+qqqr/qqqq/6qqqv+qqqr/qqqq/6qqqv+qqqr/qqqq/6qq
        qv+qqqr/qqqq/6qqqv+qqqr/iIiI/4iIiP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP///////////6qqqv+qqqr/qqqq/6qqqv+qqqr/qqqq/6qqqv+qqqr/qqqq/6qq
        qv+qqqr/qqqq/6qqqv+qqqr/qqqq/4iIiP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/////////////////qqqq/6qqqv+qqqr/qqqq/6qq
        qv+qqqr/qqqq/6qqqv+qqqr/iIiI/4iIiP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAP//////////////
        /////////////////////////////wAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//wf///wB///wAH//wAAf/wAAB/wAAAHwAAAAcAAAADgAAAA4AAAAfgA
        AAf+AAAH8AAAB/AAAAfwAAAH8AAAB/AAAAf4AAAH/AAAB/4AAAf/gAAH/gAAB/wAAAf8AAAH/AAAB/wA
        AAf8AAAH/AAAB/wAAB/+AAB//4AB///wD/8=
</value>
  </data>
</root>